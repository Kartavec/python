# 1. Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
# принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц вы найдете в методичке.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix
# (двух матриц). Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем с
# первым элементом первой строки второй матрицы и т.д.

class Matrix():

    def __init__(self, data):
        self.data = data

    def __str__(self):
        # return '\n'.join(f'{row}' for row in self.data)

        return '\n'.join(''.join(f'\t{el:>5}' for el in row) for row in self.data)
    #     # return '\n'.join('\t'.join(map(str,row)) for row in self.data)

    # реализовано для матриц одинакового размера
    def __add__(self, other):
        if isinstance(other, Matrix):
            return Matrix([[other.data[row_i][col_i] + self.data[row_i][col_i] for col_i in range(len(self.data[row_i]))]\
                    for row_i in range(len(self.data))])


a = Matrix([[31, 2], [370, 43], [51, 86]])
b = Matrix([[1, 2], [5, 6], [7, 8]])
c = a + b
print(c)

