"""
Задание 3.
Создайте собственный класс-исключение, который должен
проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Запрашивать у пользователя данные и заполнять список
необходимо только числами. Класс-исключение должен
контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы
запрашиваются бесконечно, пока пользователь сам не
остановит работу скрипта, введя, например, команду «stop».
При этом скрипт завершается, сформированный список
с числами выводится на экран.
Подсказка: для этого задания примем, что пользователь
может вводить только числа и строки. Во время ввода
пользователем очередного элемента необходимо реализовать
проверку типа элемента. Вносить его в список, только
если введено число. Класс-исключение должен не
позволить пользователю ввести текст (не число) и
отобразить соответствующее сообщение. При этом
работа скрипта не должна завершаться.
"""


class Error:
    def __init__(self, *args):
        self.my_list = []

    def my_input(self):
        while True:
            try:
                val = int(input('Введите значения и нажимайте Enter - '))
                self.my_list.append(val)
                print(f'Текущий список - {self.my_list} \n ')
            except Exception:
                print("Недопустимое значение - строка и булево")
                y_or_n = input('Попробовать еще раз? Y/N ')

                if y_or_n == 'Y' or y_or_n == 'y':
                    print(try_except.my_input())
                elif y_or_n == 'N' or y_or_n == 'n':
                    return 'Вы вышли'
                else:
                    return 'Вы вышли'


try_except = Error(1)
print(try_except.my_input())
